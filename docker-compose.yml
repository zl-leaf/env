version: '2'

services:

### Application #############################
  application:
    image: tianon/true
    volumes:
      - ${APPLICATION}:/opt/htdoc
      - ${FRONT_LOG}:/var/log/front/nginx

### Workspace #############################
  workspace:
    build:
      context: ./workspace
      args:
        - NODE_VERSION=${WORKSPACE_NODE_VERSION}
        - NODE_ENV=${NODE_ENV}
    volumes_from:
      - application
    links:
      - platform:${PLATFORM_API_HOST}

### platform api #############################
  platform:
    build: ./platform
    volumes_from:
      - application
    volumes:
      - ${PLATFORM_NGINX_LOG_PATH}:/var/log/nginx
      - ${PLATFORM_NGINX_SITES_PATH}:/etc/nginx/sites-available
    ports:
      - "${PLATFORM_NGINX_HTTP_PORT}:80"
      - "${PLATFORM_NGINX_HTTPS_PORT}:443"
    logging:
      driver: fluentd
      options:
        fluentd-address: "${FLUENTD_HOST}:24224"
        tag: "docker.platform"

### machinedog #############################
  machinedog:
    build: ./machinedog
    volumes_from:
      - application
    ports:
       - "8080:8080"

### Web #############################
  web:
    build:
      context: ./web
      args:
        - NODE_ENV=${NODE_ENV}
    volumes_from:
      - application
    ports:
      - "${WEB_NODE_PORT}:8080"
    links:
      - platform:${PLATFORM_API_HOST}
    logging:
      driver: fluentd
      options:
        fluentd-address: "${FLUENTD_HOST}:24224"
        tag: "docker.web"

### mysql #############################
  mysql:
    build:
      context: ./mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${MYSQL_TIMEZONE}
    volumes:
      - ${MYSQL_DATA_PATH}:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:3306"
    logging:
      driver: fluentd
      options:
        fluentd-address: "${FLUENTD_HOST}:24224"
        tag: "docker.mysql"

  mysql-slave:
    build:
      context: ./mysql-slave
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE_SLAVE}
      - MYSQL_USER=${MYSQL_USER_SLAVE}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD_SLAVE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD_SLAVE}
      - TZ=${MYSQL_TIMEZONE}
    volumes:
      - ${MYSQL_DATA_PATH_SLAVE}:/var/lib/mysql
    ports:
      - "${MYSQL_PORT_SLAVE}:3306"
    links:
      - mysql:mysql-master
    logging:
      driver: fluentd
      options:
        fluentd-address: "${FLUENTD_HOST}:24224"
        tag: "docker.mysql-slave"

### fluentd #############################
  fluentd:
    build:
      context: ./fluentd
    volumes_from:
      - application
    volumes:
      - ${FLUENTD_DATA}:/fluentd/log
    ports:
       - "5140:5140"
       - "24224:24224"

### elasticsearch #############################
  elasticsearch:
    build:
      context: ./elasticsearch
    user: elasticsearch
    volumes:
       - ${ELASTIC_DATA}:/usr/share/elasticsearch/data
    ports:
       - "9200:9200"
       - "9300:9300"

### kibana #############################
  kibana:
    build:
      context: ./kibana
    ports:
      - 5601:5601
    links:
      - elasticsearch:${ELASTIC_HOST}
    environment:
      - ELASTICSEARCH_URL=http://${ELASTIC_HOST}:9200

### canal #############################
  canal:
    build:
      context: ./canal
    links:
      - mysql:mysql
    volumes:
       - /Users/leaf/Docker/docker-data/env/canal/logs:/usr/local/canal/logs
    ports:
       - "11111:11111"

### canal-mysql-elasticsearch-sync #############################
  canal-sync:
    build:
      context: ./canal-mysql-elasticsearch-sync
    ports:
       - "8828:8828"

### dns-server #############################
  # dns-server:
  #   build:
  #     context: ./dns-server
  #   ports:
  #     - "53:53"
  #   cap_add:
  #     - NET_ADMIN
